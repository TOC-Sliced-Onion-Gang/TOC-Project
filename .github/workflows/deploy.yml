name: flask Pipeline
run-name: Flask Pipeline eiei ðŸ¤¡ðŸ¤¡

on:
  workflow_dispatch:
  push:
    branches:
      -main

jobs:
  Flask_and_React_run:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: 'Create env file'
        run: |
          echo REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }} >> .env
          echo CF_TOKEN=${{ secrets.CF_TOKEN }} >> .env
          cat .env

      - name: Build and run compose
        run: |
          cat .env
          docker-compose down
          docker-compose up --build -d

      - name: Health check for Flask backend
        run: |
          echo "Waiting for Flask to be ready..."
          sleep 10  # Wait for Flask app to start
          STATUS_CODE=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:8080/member)
          if [ "$STATUS_CODE" -ne 200 ]; then
            echo "Health check failed with status code: $STATUS_CODE"
            exit 1
          else
            echo "Health check passed! Flask is running correctly."
          fi

      - name: Health check for React frontend
        run: |
          echo "Waiting for React frontend to be ready..."
          sleep 10  # Wait for React frontend to start
          STATUS_CODE=$(curl --write-out "%{http_code}" --silent --output /dev/null http://localhost:3000)
          if [ "$STATUS_CODE" -ne 200 ]; then
            echo "Health check failed for React with status code: $STATUS_CODE"
            exit 1
          else
            echo "Health check passed for React! Frontend is running correctly."
          fi
      
